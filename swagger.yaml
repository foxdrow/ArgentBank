swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/accounts:
    get:
      tags:
        - User Accounts
      summary: User's Account
      description: API for getting all accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      responses:
        "200":
          description: Accounts retrieved successully
          schema:
            $ref: "#/definitions/Accounts"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Accounts not found
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}:
    get:
      tags:
        - User Accounts
      summary: User's Account
      description: API for getting an account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
      responses:
        "200":
          description: Account retrieved successully
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Account not found
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    get:
      tags:
        - User Transactions
      summary: Transactions
      description: API for getting all transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
      responses:
        "200":
          description: Transactions retrieved successully
          schema:
            $ref: "#/definitions/Transactions"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transactions not found
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - User Transactions
      summary: Transaction
      description: API for getting a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
        - in: path
          name: transactionId
          description: Transaction's ID
          required: true
          type: integer
      responses:
        "200":
          description: Transaction retrieved successully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionsId}/update:
    patch:
      tags:
      - User Transactions
      summary: Update an existing transaction
      description: API for updating a transaction
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - in: path
        name: accountId
        description: User's account ID
        type: integer
        required: true
      - in: path
        name: transactionsId
        description: Transaction's ID
        required: true
        type: integer
      - in: body
        name: body
        required: true
        description: Update transaction's informations
        schema:
            $ref: '#/definitions/TransactionsUpdate'
      responses:
        "200":
          description: Transaction updated successully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error 
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Accounts:
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          account_0:
            type: object
            description: First Account
            properties:
              id:
                type: string
              name:
                type: string
              number:
                type: string
              rib:
                type: integer
              iban:
                type: string
              amount:
                type: number
              description:
                type: string
              notes:
                type: string
          account_1:
            type: object
            description: Second Account
            properties:
              id:
                type: string
              name:
                type: string
              number:
                type: string
              rib:
                type: integer
              iban:
                type: string
              amount:
                type: number
              description:
                type: string
              notes:
                type: string
  Account:
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        description: Account
        properties:
          id:
            type: string
          name:
            type: string
          number:
            type: string
          rib:
            type: integer
          iban:
            type: string
          amount:
            type: number
          description:
            type: string
          notes:
            type: string
  Transactions:
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transaction_0:
            type: object
            description: First transaction
            properties:
              id:
                type: integer
              date:
                type: string
              description:
                type: string
              amount:
                type: number
              currency:
                type: string
              type:
                type: string
              category:
                type: string
              notes:
                type: string
          transaction_1:
            type: object
            description: Second transaction
            properties:
              id:
                type: integer
              date:
                type: string
              description:
                type: string
              amount:
                type: number
              currency:
                type: string
              type:
                type: string
              category:
                type: string
              notes:
                type: string
  Transaction:
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        description: Transaction
        properties:
          id:
            type: integer
          date:
            type: string
          description:
            type: string
          amount:
            type: number
          currency:
            type: string
          type:
            type: string
          category:
            type: string
          notes:
            type: string
  TransactionsUpdate:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
